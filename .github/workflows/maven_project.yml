name: Maven CI/CD

on:
  push:
    branches: [ maven ]
  pull_request:
    branches: [ maven ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
            
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      

    - name: Build and test project with Maven
      run: |
       mvn -B package --file pom.xml
       mkdir staging && cp target/*jar-with-dependencies.jar staging/
       echo "This is the var value1 $GITHUB_WORKSPACE"
       echo "This is the var value2 ${GITHUB_WORKSPACE}"
    - uses: actions/upload-artifact@v1
      with:
        name: Package
        path: staging
  
  build-docker-image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]

    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/download-artifact@v1
        with:
          name: Package
          path: staging
      - name: Build Docker image
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo ::set-output name=tag::${TAG}
          docker build . -f Dockerfile -t ${DOCKER_IMAGE}:${TAG} --build-args SOURCE=${GITHUB_WORKSPACE}
          docker push ${DOCKER_IMAGE}:${TAG}
        env:
          DOCKER_IMAGE: "raghukiran/sample-mvn-app"
  
  deploy_helm_chart:
    runs-on: ubuntu-latest
    needs: [build-docker-image]
    if: 
          contains('refs/heads/maven', github.ref)
    steps:
    - uses: actions/checkout@v2
    - name: Set image TAG
      id: vars
      run: |
         ls -la
         pwd
         tree .
         TAG=$(git rev-parse --short HEAD)
         echo ::set-output name=tag::${TAG}

    - name: Update ads backend HelmChart in dev environment
      uses: fjogeleit/yaml-update-action@master
      with:
        valueFile: 'values.yaml'
        propertyPath: 'image.tag'
        value: ${{ steps.vars.outputs.tag }}
        branch: charts
        message: 'Bump docker Image Version to ${{ steps.build.outputs.tag }} in helm chart'
